
1. Where class build 
2. Fixed Sync issue  (DONE)
3. user management
4. tracking script (DONE)


20 may
1. user management (pending) (nimish and devashish)
2. Where class build  (nimish)
3. delete table (setup) (nimish)
4. sync status via socket (devashish)
5. workspaceId from header (nimish, devashish)
nimish
1, 2, 3, 5

devashish
1. 4. 5





#######################################################################
###
product list filter

##### Devashish
1. create a visitor table 
2. if a user join via socket add him in visitor table.
3. if he disconnects remove him from visitor table.


### Nimish
1. change the name of pageview Table to event table. ()
2. add created_at column in event table Date.now() ()


customer_id
visitor_id: cart_id
type: customer/visitor
first_page_viewed
last_page_viewed

### sync from shopify Nimish
1. sync cart. (use is checkout api)
2. sync draft order
3. sync inventory items,  inventory level, and location

### Nimish
whenever a order is add
we have to remove it related carts.












### 
oauth











####
product agggregate
product id
variant id
quantity sold
quantity refund
sales generated






<<<<<<< HEAD
const io = require("socket.io-client");
const socket = io.connect("http://localhost:4000/");
function onError(message)
{
    console.log(message);
}
socket.on("connect", () => {
  axios.post("http://localhost:4000/shopify-manager/sync", {workspaceId: 1, iop:"frontend"})
    console.log(socket.id); // x8WIv7-mJelg7on_ALbx
  });

socket.on('connect_error', onError )
socket.on('workspace', (message) => {
  console.log(message);
})

 // "default_address": {
    //     "address1": "Chestnut Street 92",
    //     "address2": "Apartment 2",
    //     "city": "Louisville",
    //     "country": "united states",
    //     "province": "Kentucky",
    //     "zip": "40202",
    //   }


    1. greater_than 10
    2. less_than 10
    3. between 10 to 20
    
    15 feb
    1. 6,7,8,...
    2. 5,4,3,...


Devashish
1. Complete user management. 
2. socket service deploy heroku.
3. Ui visitor add. 
4. add https for cs-service.




Nimish
1. Run Customer aggregate for all customer.
2. add a route for group by query.
3. https for s3 frontend.






https for cs-service, shift aws
socket service deploy aws


https for s3 frontend 
